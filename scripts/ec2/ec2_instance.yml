#aws cloudformation create-stack --stack-name ec2-instance-create --template-body file://///Users/ddrobotko/Documents/Projects/aws_course/aws-fundamental-course/scripts/ec2/ec2_instance.yml --capabilities CAPABILITY_NAMED_IAM --profile default
#aws cloudformation describe-stacks --stack-name ec2-instance-create
#aws cloudformation delete-stack --stack-name ec2-instance-create

Description: Create EC2 Instance
Parameters:
  KeyName:
    Description: EC2 Instance SSH Key
    Type: AWS::EC2::KeyPair::KeyName
    Default: demo-key
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
  EC2InstanceAmiId:
    Description: Ami identifier
    Type: String
    Default: ami-08e2d37b6a0129927
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2InstanceAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref HTTPSecurityGroup
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ssh access via port 22
      GroupName: SSHSecurityGroup
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
        Description: For ssh traffic
  HTTPSecurityGroup:
    Description: For internet traffic
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ssh access via port 80
      GroupName: HTTPSecurityGroup
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  S3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref S3Role
  S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3Policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"
      Roles:
        - Ref: S3Role
Outputs:
  InstanceId:
    Description: EC2 Instance InstanceId
    Value: !Ref EC2Instance
  PublicDNS:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
